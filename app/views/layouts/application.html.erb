<!DOCTYPE html>
<html>
  <head>
    <title>Ecommerce</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag "tailwind", "inter-font", "data-turbo-track": "reload" %>

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
  </head>

  <body>
  <%= render 'shared/navbar' %>
  <main class="container mx-auto mt-28 max-w-7xl px-2 sm:px-6 lg:px-8">

      <%= yield %>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const cartCount = document.getElementById('cart-count');

            function updateCartCount() {
                const cart = JSON.parse(localStorage.getItem('cart')) || [];
                let cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);
                cartCount.innerText = cartItemCount;
            }

            updateCartCount();

            function loadCart() {
                const cartContainer = document.getElementById('cart-items');
                const totalContainer = document.getElementById('total');
                if (!cartContainer || !totalContainer) return;

                let total = 0;
                cartContainer.innerHTML = ''; // Clear previous content
                totalContainer.innerHTML = ''; // Clear previous content
                const cart = JSON.parse(localStorage.getItem('cart')) || [];

                cart.forEach(item => {
                    total += item.price * item.quantity;

                    const div = document.createElement('div');
                    div.classList.add('bg-white', 'p-4', 'rounded', 'shadow', 'flex', 'justify-between', 'items-center');

                    div.innerHTML = `
            <div>
              <h3 class="text-lg font-semibold">${item.name}</h3>
              <p>Price: $${(item.price / 100).toFixed(2)} - Size: ${item.size}</p>
              <p>Quantity: ${item.quantity}</p>
              <p>Subtotal: $${(item.price * item.quantity / 100).toFixed(2)}</p>
            </div>
            <div class="flex space-x-2">
              <button class="bg-red-500 text-white px-2 py-1 rounded remove-item" data-id="${item.id}" data-size="${item.size}">Remove</button>
              <button class="bg-green-500 text-white px-2 py-1 rounded increase-qty" data-id="${item.id}" data-size="${item.size}">+</button>
              <button class="bg-yellow-500 text-white px-2 py-1 rounded decrease-qty" data-id="${item.id}" data-size="${item.size}">-</button>
            </div>
          `;

                    cartContainer.appendChild(div);
                });

                const totalEl = document.createElement('div');
                totalEl.innerText = `Total: $${(total / 100).toFixed(2)}`;
                totalContainer.appendChild(totalEl);

                document.querySelectorAll('.remove-item').forEach(button => {
                    button.addEventListener('click', removeFromCart);
                });

                document.querySelectorAll('.increase-qty').forEach(button => {
                    button.addEventListener('click', increaseQuantity);
                });

                document.querySelectorAll('.decrease-qty').forEach(button => {
                    button.addEventListener('click', decreaseQuantity);
                });

                updateCartCount();
            }

            function clearCart() {
                localStorage.removeItem('cart');
                loadCart();
                updateCartCount();
            }

            function removeFromCart(event) {
                const id = event.target.getAttribute('data-id');
                const size = event.target.getAttribute('data-size');
                let cart = JSON.parse(localStorage.getItem('cart')) || [];
                cart = cart.filter(item => !(item.id === id && item.size === size));
                localStorage.setItem('cart', JSON.stringify(cart));
                loadCart();
                updateCartCount();
            }

            function increaseQuantity(event) {
                const id = event.target.getAttribute('data-id');
                const size = event.target.getAttribute('data-size');
                let cart = JSON.parse(localStorage.getItem('cart')) || [];
                const index = cart.findIndex(item => item.id === id && item.size === size);
                if (index >= 0) {
                    cart[index].quantity += 1;
                    localStorage.setItem('cart', JSON.stringify(cart));
                    loadCart();
                    updateCartCount();
                }
            }

            function decreaseQuantity(event) {
                const id = event.target.getAttribute('data-id');
                const size = event.target.getAttribute('data-size');
                let cart = JSON.parse(localStorage.getItem('cart')) || [];
                const index = cart.findIndex(item => item.id === id && item.size === size);
                if (index >= 0) {
                    if (cart[index].quantity > 1) {
                        cart[index].quantity -= 1;
                        localStorage.setItem('cart', JSON.stringify(cart));
                        loadCart();
                        updateCartCount();
                    } else {
                        removeFromCart(event);
                    }
                }
            }

            function checkout() {
                const cart = JSON.parse(localStorage.getItem('cart'));
                const payload = {
                    authenticity_token: document.querySelector("[name='csrf-token']").content,
                    cart: cart
                };

                fetch('/checkout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': document.querySelector("[name='csrf-token']").content
                    },
                    body: JSON.stringify(payload)
                }).then(response => {
                    if (response.ok) {
                        response.json().then(body => {
                            window.location.href = body.url;
                        });
                    } else {
                        response.json().then(body => {
                            const errorEl = document.createElement('div');
                            errorEl.innerText = `There was an error processing your order. ${body.error}`;
                            const errorContainer = document.getElementById('errorContainer');
                            errorContainer.appendChild(errorEl);
                        });
                    }
                });
            }

            const clearCartButton = document.getElementById('clear-cart');
            const checkoutButton = document.getElementById('checkout');
            if (clearCartButton) clearCartButton.addEventListener('click', clearCart);
            if (checkoutButton) checkoutButton.addEventListener('click', checkout);

            loadCart();
        });
    </script>
    </main>
  <%= render 'shared/footer' %>
  </body>
</html>
